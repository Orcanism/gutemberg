"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const decode_1 = __importDefault(require("./decode"));
it('returns null for non-string input', () => {
    expect(decode_1.default(undefined)).toEqual(null);
    expect(decode_1.default(42)).toEqual(null);
    expect(decode_1.default({})).toEqual(null);
});
it('returns null for invalid length', () => {
    expect(decode_1.default('')).toEqual(null);
    expect(decode_1.default('23')).toEqual(null);
    expect(decode_1.default('23456789CFGH')).toEqual(null); // 12
});
it('returns null for invalid digits', () => {
    expect(decode_1.default('1AB')).toEqual(null);
    expect(decode_1.default('9FFW84J9-XG')).toEqual(null);
    expect(decode_1.default('  9FFW84J9+XG  ')).toEqual(null);
});
it('decodes the plus code', () => {
    expect(decode_1.default('9FFW84J9+XG')).toEqual({
        latitude: 59.332438,
        longitude: 18.118813,
        resolution: 0.000125
    });
});
it('decodes codes ending with +', () => {
    expect(decode_1.default('9FFW84J9+')).toEqual({
        latitude: 59.33125,
        longitude: 18.11875,
        resolution: 0.0025
    });
    expect(decode_1.default('9FFW8400+')).toEqual({
        latitude: 59.325,
        longitude: 18.125,
        resolution: 0.05
    });
    expect(decode_1.default('9FFW0000+')).toEqual({
        latitude: 59.5,
        longitude: 18.5,
        resolution: 1
    });
    expect(decode_1.default('9F000000+')).toEqual({
        latitude: 60.0,
        longitude: 10.0,
        resolution: 20
    });
});
//# sourceMappingURL=decode.spec.js.map